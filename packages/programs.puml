@startuml
package Program_and_Tasks {

  class Program #lightgreen {
    +id: int
    +name: String
    +description: String
  }

  note right of Program
  A succession of task blocks (composites).
  end note

  class Task #lightgreen {
    +id: int
    +title: String
    +description: String
    +isMandatory: Boolean
    +completed: Boolean
  }

  class Level #lightgreen {
    +id: int
    +name: String
    +difficulty: Int
    +unlocked: Boolean
  }

  class Repetitions #lightgreen {
    +id: int
    +count: Int
    +completed: Boolean
  }

  note bottom of Level
  Indicates the difficulty of a task. Optional as task might not have difficulty.
  end note

  note bottom of Repetitions
  Indicates the number of repetitions of a task. Mandatory to define program.
  end note

  class TaskRequirement #lightgreen {
    +requiredRepetitions: int
  }

  note left of TaskRequirement
  How many times a Task must be repeated
  on a specific Level within a TaskBlock.
  end note

  class TaskAssignment #lightgreen {
    task: Task

  }

  note right of TaskAssignment
  Assigns a Task to a TaskBlock and defines
  required repetitions across Levels.
  end note

  class TaskBlock #lightgreen {
    +id: int
    +title: String
    +description: String
    +startDate: DateTime
    +endDate: DateTime
  }

  note right of TaskBlock
  Composite element: groups multiple TaskAssignments and TaskBlocks
  into a hierarchy. Allows nested structures.
  end note

  TaskAssignment --> "1" Task : "has assigned"
  TaskAssignment --> "1..*" TaskRequirement: "has Assigned"
  TaskRequirement --> "0..1" Level : optional
  TaskRequirement --> "1..*" Repetitions : required

  Program --> "1..*" TaskBlock

  TaskBlock --> "1..*" TaskAssignment : "contains"

}

@enduml