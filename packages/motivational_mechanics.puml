@startuml
package MotivationalMechanics #fff6e8ff {

  left to right direction
  class MechanicCategory
  class GameMechanic 
  
  '//----------------------------------Progress Indicators---------------------------------------------'
  object Progress_Indicators {
    MechanicCategory
  }
  Progress_Indicators --> MechanicCategory : "instance of"
    object Level_and_Experience_Point_System {
    As a core progression system, it provides a continuous sense of growth and achievement as users earn XP and unlock new levels or features
  }
  Level_and_Experience_Point_System --> GameMechanic : "instance of"
  Level_and_Experience_Point_System --> Progress_Indicators : "categorized into"

  
  '//----------------------------------Competition with others---------------------------------------------'
  object Competition_with_others {
    MechanicCategory
  }
  Competition_with_others --> MechanicCategory : "instance of"
    object Leaderboards {
    As a core progression system, it provides a continuous sense of growth and achievement as users earn XP and unlock new levels or features
  }
  Leaderboards --> GameMechanic : "instance of"
  Leaderboards --> Competition_with_others : "categorized into"

  '//---------------------------------Personal Goals---------------------------------------------'
  object Personal_Goals {
    MechanicCategory
  }
  Personal_Goals --> MechanicCategory : "instance of"
  object Self_Assigned_Targets {
    Users define their own objectives.
  }
  Self_Assigned_Targets --> GameMechanic : "instance of"
  Self_Assigned_Targets --> Personal_Goals : "categorized into"

  '//---------------------------------Personalization and Creativity---------------------------------------------'
  object Personalization_and_Creativity {
    MechanicCategory
  }
  Personalization_and_Creativity --> MechanicCategory : "instance of"
  object Custom_Player_Made_Content {
    User-generated content in-system.
  }
  Custom_Player_Made_Content --> GameMechanic : "instance of"
  Custom_Player_Made_Content --> Personalization_and_Creativity : "categorized into"

  '//---------------------------------Sharing Achievements with Others---------------------------------------------'
  object Sharing_Achievements {
    MechanicCategory
  }
  Sharing_Achievements --> MechanicCategory : "instance of"
  
  object Social_Share_Buttons {
    Sharing accomplishments externally.
  }
  Social_Share_Buttons --> GameMechanic : "instance of"
  Social_Share_Buttons --> Sharing_Achievements : "categorized into"

  '//---------------------------------Social Networking---------------------------------------------'
  object Social_Networking {
    MechanicCategory
  }
  Social_Networking --> MechanicCategory : "instance of"
  object Community_Insights {
    Display others’ behaviors for comparison.
  }
  
  Community_Insights --> GameMechanic : "instance of"
  Community_Insights --> Social_Networking : "categorized into"

  '//---------------------------------Surprises and Special Events---------------------------------------------'
  object Surprises_and_Events {
    MechanicCategory
  }
  Surprises_and_Events --> MechanicCategory : "instance of"
  object Mystery_Boxes {
    Loot boxes with random content.
  }
  
  Mystery_Boxes --> GameMechanic : "instance of"
  Mystery_Boxes --> Surprises_and_Events : "categorized into"

  '//---------------------------------Motivational Messages---------------------------------------------'
  object Motivational_Messages {
    MechanicCategory
  }
  Motivational_Messages --> MechanicCategory : "instance of"
  object Encouraging_Messages {
    Positive reinforcement to sustain motivation.
  }
  Encouraging_Messages --> GameMechanic : "instance of"
  Encouraging_Messages --> Motivational_Messages : "categorized into"

  '//---------------------------------Time-Based Challenges---------------------------------------------'
  object Time_Based_Challenges {
    MechanicCategory
  }
  Time_Based_Challenges --> MechanicCategory : "instance of"
  object Appointment_Dynamics {
    Scheduled events like Happy Hour.
  }
  Appointment_Dynamics --> GameMechanic : "instance of"
  Appointment_Dynamics --> Time_Based_Challenges : "categorized into"

  '//----------------------------------Rewards and Unlocks---------------------------------------------'
  object Rewards_and_Unlocks {
    MechanicCategory
  }
  Rewards_and_Unlocks --> MechanicCategory : "instance of"
  object In_Game_Currency {
    Accumulation of virtual money/resources.
  }
  In_Game_Currency --> GameMechanic : "instance of"
  In_Game_Currency --> Rewards_and_Unlocks : "categorized into"

  package Usertrait_Mechanic_Mapping {

    class MechanicTraitWeight #9bfbff {
      +mechanicId: int
      +userTrait: UserTrait
      +weight: float  ' (0.0 – 1.0) '
    }

    class Mapping {
      Trait : UserTrait
      Mechanic: MotivationalMechanic
      weight: float
    }
    Mapping --> UserTrait : "has"

    object Narrative_GT10_to_Philantropist {
      Trait = Philantropist
      Mechanic = Narrative_GT10
      weight = 0.8
    }
    Narrative_GT10_to_Philantropist : Mapping
    Narrative_GT10_to_Philantropist --> Mapping : "instance of"

    Narrative_GT10_to_Philantropist --> Philanthropist : "corresponds to"
    Narrative_GT10_to_Philantropist --> Narrative_GT10 : "corresponds by"
  }
}
MotivationalMechanics.GameMechanic --> KeySituations.MechanicKeySituation: "triggers"
MotivationalMechanics.GameMechanic --> UserModel.UserTraitWeight: "selectedByTraitWeight"
@enduml